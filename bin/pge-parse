#!/usr/bin/env node

var pge_parse = require('../lib/pge-parse');
require('date-utils');

var argv = require('optimist')
    .usage('Usage: $0 [-a] [-b <baseline territory>] [-m <miles_per_day>] [-c <Wh per mile>] <XML data filename>')
    .demand(1)
    .boolean('a')
    .alias('a','all-electric')
    .describe('a','Use the "all electric" baseline numbers -- specify this option if your heating is electric instead of gas')
    .default('b', 'T')
    .alias('b','baseline-territory')
    .describe('b',"Baseline territory ['P'..'Z'] from http://bit.ly/12kMV2l")
    .default('c', 350)
    .alias('c','Wh-per-mile')
    .describe('c','How many Wh per mile do you get')
    .default('m', 50)
    .alias('m','miles-per-day')
    .describe('m','How many electric car miles per day do you want to add at off-peak charging')
    .alias('s','start-date')
    .describe('s','Ignore any data before this date')
    .alias('e','end-data')
    .describe('e','Ignore any data after this date')
    .alias('S','summary')
    .describe('S','Summary bill data to obtain billing start/stop periods')
    .wrap(80)
    .argv

pge_parse.parseFile(
                        argv._[0],
                        argv.S,
                        argv.a,
                        argv.b,
                        argv.c,
                        argv.m,
                        argv.s ? new Date(argv.s) : undefined,
                        argv.e ? new Date(argv.e).addDays(1) : undefined
                    );
