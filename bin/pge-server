#!/usr/bin/env node

var pge_parse = require('pge-analyzer');
var printf = require('printf');

var formidable = require('formidable');
var fs = require('fs');
var express = require('express');
var app = express();

var serverPort = process.env.npm_package_config_port || 8080;

app.use('/upload', function(req, res, next)
{
    if (req.method.toLowerCase() == 'post')
    {
        var form = new formidable.IncomingForm();

        form.parse(req, function(err, fields, files) {});

        var argv = {};

        form.on('field', function(name, value)
        {
            argv[name] = value;
        });

        form.on('file', function(name, file)
        {
            // No need to keep the temp files around
            fs.unlink(file.path);
        });

        var parser = undefined;

        form.onPart = function(part)
        {
            // Part can be a form field, or a file
            if (!part.filename)
            {
                // let formidable handle all non-file parts
                form.handlePart(part);
                return;
            }

            if(!parser)
            {
                parser = pge_parse.PGEParser(
                    argv.a,
                    argv.b,
                    argv.c,
                    argv.m,
                    argv.p ? new Date(argv.p) : undefined
                    );
            }

            if(part.name == 'summary')
            {
                var summary = parser.summaryParser(function() {});

                part.addListener('data', function(chunk)
                {
                    summary.parseString(chunk);
                });

            }

            if(part.name == 'details')
            {
                function report(totals)
                {
                    var response = "";
                    // Print out report
                    for(var rate in totals)
                    {
                        data = totals[rate];
                        response += "<div class='rate'>Rate: " + rate;
                        for(var period in data)
                        {
                            sub_data = data[period];
                            response += "<div class='subtotal'>" + period +
                            printf("<div class='cost'>Cost: <span class='money'>$%0.2f</span></div>",sub_data.cost) +
                            printf("<div class='perkwh'>Per kWh: <span class='money'>$%0.2f</span></div>",sub_data.cost/sub_data.amount) +
                            printf("<div class='perday'>Per day: <span class='money'>$%0.2f</span></div>",sub_data.cost/sub_data.numDays) +
                            "</div>";
                        }
                        response += "</div>";
                    }
                    res.send(200, response);
                }

                var details = parser.detailsParser(report);

                part.addListener('data', function(chunk)
                {
                    details.parseString(chunk);
                });
            }
        }

        return;
    }
});

app.use(express.static(__dirname + '/../public'));

app.listen(serverPort);

console.log("Started server on port",serverPort);
